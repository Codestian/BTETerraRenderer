plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
}

version = project.modVersion + "-" + project.minecraftVersion
group = project.modGroup
archivesBaseName = project.modId

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven { // lzma
        name = "SpongePowered"
        url = "https://repo.spongepowered.org/maven/"
    }
    maven { //used for leveldb
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
    maven { //used for leveldb
        name = "OpenCollab Snapshots"
        url = "https://repo.opencollab.dev/snapshot/"
    }
}

configurations {
    shadeDep
    shadeCore
    compileAndTestOnly

    implementation.extendsFrom shadeDep
    implementation.extendsFrom shadeCore
    compileOnly.extendsFrom compileAndTestOnly
    testImplementation.extendsFrom compileAndTestOnly
}

dependencies {
    shadeDep 'org.osgeo:proj4j:0.1.0'
    shadeDep 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    shadeDep 'org.reflections:reflections:0.10.2'
    shadeDep("net.daporkchop.lib:binary:0.5.5-SNAPSHOT") { exclude group: "io.netty" } // T++

    compileOnly 'org.apache.logging.log4j:log4j-core:2.20.0'
    compileAndTestOnly 'com.google.guava:guava:31.1-jre' // T++
    compileAndTestOnly 'io.netty:netty-all:4.1.9.Final' // T++
    compileAndTestOnly 'lzma:lzma:0.0.1' // T++

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly 'junit:junit:4.13.2'
}

shadowJar {
    archiveClassifier.set(null)
    configurations = [ project.configurations.shadeDep, project.configurations.shadeCore ]
    exclude 'module-info.class'
}
build.dependsOn shadowJar

tasks.register('relocateShadowDepJar', CustomConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "${project.modGroup}.${project.modId}.dep"
    configurations = [ project.configurations.shadeDep ]
}
shadowJar.dependsOn relocateShadowDepJar

test {
    useJUnitPlatform()
}